# Task ID: 121
# Title: Integrate Initialize Functionality into Add Task Command
# Status: in-progress
# Dependencies: 120
# Priority: high
# Description: Modify the add-task functionality to automatically create a tasks.json file if one doesn't exist, eliminating the need for a separate init command and simplifying the user experience.
# Details:
The goal is to streamline the user experience by making the first task creation automatically handle project initialization. When a user runs 'lm-tasker add-task' and no tasks.json file exists, the system should:

1. Create a basic tasks.json file with the standard structure
2. Add the new task as the first task in the file
3. Set up the basic metadata (project name, version, timestamps)
4. Provide user feedback about the initialization

This eliminates the need for users to run 'lm-tasker init' before adding their first task, making the workflow more intuitive and reducing the number of commands users need to remember.

Implementation should:
- Check for existing tasks.json file in add-task command
- If no file exists, create one with proper structure
- Add the new task to the newly created file
- Maintain backward compatibility with existing projects
- Update both CLI and MCP implementations
- Update documentation to reflect the simplified workflow

# Test Strategy:
Test the functionality by:
1. Creating a new directory without tasks.json
2. Running add-task command and verifying tasks.json is created
3. Verifying the task is properly added to the new file
4. Testing with existing projects to ensure no regression
5. Testing both CLI and MCP implementations
6. Verifying proper error handling for file creation failures

# Subtasks:
## 1. Implement auto-initialize in add-task (CLI) [done]
### Dependencies: None
### Description: Update CLI add-task flow to create tasks.json (and tasks/ dir) when missing, initialize meta, then add the first task. Provide clear success output.
### Details:


## 2. Implement auto-initialize in add-task (MCP tool) [done]
### Dependencies: None
### Description: Mirror CLI behavior in MCP add-task direct function/tool so it initializes tasks.json if missing before adding the task.
### Details:


## 3. Create helper to generate minimal tasks.json [pending]
### Dependencies: None
### Description: Add a shared utility to generate a minimal tasks.json structure with meta and empty tasks array, including timestamps.
### Details:


## 4. Ensure tasks directory creation [pending]
### Dependencies: None
### Description: When initializing, ensure the tasks/ directory is created if missing and is used for future task files.
### Details:


## 5. Deprecate or alias init command [pending]
### Dependencies: None
### Description: Decide deprecation path: either keep init as a thin alias that only creates tasks.json, or mark deprecated with guidance to use add-task. Implement accordingly in CLI.
### Details:


## 6. Update command help and UX messages [pending]
### Dependencies: None
### Description: Revise help text for add-task and init to reflect new behavior. Add explicit user messages when auto-initialization occurs.
### Details:


## 7. Unit tests: add-task auto-init behavior [pending]
### Dependencies: None
### Description: Add unit tests covering: no tasks.json -> creates file and adds task; existing file no-op init; file write failure path.
### Details:


## 8. Refactor or remove init tests [pending]
### Dependencies: None
### Description: Remove or adapt tests that assume init must be run before add-task. Keep a minimal test if init remains as alias.
### Details:


## 9. E2E tests: first run with add-task only [pending]
### Dependencies: None
### Description: Update e2e flows to create a fresh project and run only add-task to bootstrap. Verify tasks.json and first task exist.
### Details:


## 10. Documentation: update README and command-reference [pending]
### Dependencies: None
### Description: Document the new behavior: add-task auto-initializes. Update examples, tutorials, and remove init-first steps.
### Details:


## 11. MCP docs: update tool descriptions [pending]
### Dependencies: None
### Description: Update docs to clarify MCP add-task initializes when tasks.json is absent. Adjust any references to initialize_project.
### Details:


## 12. Changelog and changeset entry [pending]
### Dependencies: None
### Description: Add a changeset and update CHANGELOG to note the UX improvement and any deprecation notes for init.
### Details:


